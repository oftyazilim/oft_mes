import{g as r,s as a,d as o,e as i,j as p,p as l}from"./dom_component-BOMsNA7g.js";import{W as c}from"./overlay-CBORn4Ri.js";import{e3 as g}from"./main-BsBPzaN6.js";const h=p(),f="dx-splitter-bar";class T extends c{_init(){super._init();const t=new g().toString();this.SPLITTER_POINTER_DOWN_EVENT_NAME=r(l.down,"dxSplitterResizing"+t),this.SPLITTER_POINTER_MOVE_EVENT_NAME=r(l.move,"dxSplitterResizing"+t),this.SPLITTER_POINTER_UP_EVENT_NAME=r(l.up,"dxSplitterResizing"+t)}_initMarkup(){super._initMarkup(),this._initActions(),this._$container=this.option("container"),this._$leftElement=this.option("leftElement"),this._$rightElement=this.option("rightElement"),this.$element().addClass("dx-splitter-wrapper").addClass("dx-splitter-initial"),this._$splitterBorder=a("<div>").addClass("dx-splitter-border").appendTo(this.$element()),this._$splitter=a("<div>").addClass(f).addClass("dx-splitter-inactive").appendTo(this._$splitterBorder)}_initActions(){this._actions={onApplyPanelSize:this._createActionByOption("onApplyPanelSize"),onActiveStateChanged:this._createActionByOption("onActiveStateChanged")}}_render(){super._render(),this._detachEventHandlers(),this._attachEventHandlers()}_clean(){this._detachEventHandlers(),super._clean()}_attachEventHandlers(){const t=o.getDocument();i.on(this._$splitterBorder,this.SPLITTER_POINTER_DOWN_EVENT_NAME,this._onMouseDownHandler.bind(this)),i.on(t,this.SPLITTER_POINTER_MOVE_EVENT_NAME,this._onMouseMoveHandler.bind(this)),i.on(t,this.SPLITTER_POINTER_UP_EVENT_NAME,this._onMouseUpHandler.bind(this))}_detachEventHandlers(){const t=o.getDocument();i.off(this._$splitterBorder,this.SPLITTER_POINTER_DOWN_EVENT_NAME),i.off(t,this.SPLITTER_POINTER_MOVE_EVENT_NAME),i.off(t,this.SPLITTER_POINTER_UP_EVENT_NAME)}_dimensionChanged(t){(!t||t!=="height")&&(this._containerWidth=this._$container.get(0).clientWidth,this._setSplitterPositionLeft({needUpdatePanels:!0,usePercentagePanelsWidth:!0}))}_onMouseDownHandler(t){t.preventDefault(),this._offsetX=t.pageX-this._$splitterBorder.offset().left<=this._getSplitterBorderWidth()?t.pageX-this._$splitterBorder.offset().left:0,this._containerWidth=this._$container.get(0).clientWidth,this.$element().removeClass("dx-splitter-initial"),this._toggleActive(!0),this._setSplitterPositionLeft({needUpdatePanels:!0})}_onMouseMoveHandler(t){this._isSplitterActive&&this._setSplitterPositionLeft({splitterPositionLeft:this._getNewSplitterPositionLeft(t),needUpdatePanels:!0})}_onMouseUpHandler(){this._isSplitterActive&&(this._leftPanelPercentageWidth=null,this._toggleActive(!1),this._setSplitterPositionLeft({needUpdatePanels:!0,usePercentagePanelsWidth:!0}))}_getNewSplitterPositionLeft(t){let e=t.pageX-this._getContainerLeftOffset()-this._offsetX;return e=Math.max(0-this._getSplitterOffset(),e),e=Math.min(this._containerWidth-this._getSplitterOffset()-this._getSplitterWidth(),e),e}_getContainerLeftOffset(){let t=this._$container.offset().left;if(h){const e=h.getComputedStyle(this._$container.get(0)),n=parseFloat(e.paddingLeft)||0,s=parseFloat(e.borderLeftWidth)||0;t+=n+s}return t}_getSplitterOffset(){return(this._getSplitterBorderWidth()-this._getSplitterWidth())/2}_getSplitterWidth(){return this._$splitter.get(0).clientWidth}_getSplitterBorderWidth(){return this._$splitterBorder.get(0).clientWidth}_getLeftPanelWidth(){return this._$leftElement.get(0).clientWidth}getSplitterBorderElement(){return this._$splitterBorder}_toggleActive(t){this.$element().toggleClass("dx-splitter-inactive",!t),this._$splitter.toggleClass("dx-splitter-inactive",!t),this._isSplitterActive=t,this._actions.onActiveStateChanged({isActive:t})}toggleDisabled(t){this.$element().toggleClass("dx-state-disabled",t),this._$splitter.toggleClass("dx-state-disabled",t)}isSplitterMoved(){return!this.$element().hasClass("dx-splitter-initial")}disableSplitterCalculation(t){this._isSplitterCalculationDisabled=t}_setSplitterPositionLeft(){let{splitterPositionLeft:t=null,needUpdatePanels:e=!1,usePercentagePanelsWidth:n=!1}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};t=t||this._getLeftPanelWidth()-this._getSplitterOffset();const s=t+this._getSplitterOffset(),d=this._containerWidth-s;this._isSplitterCalculationDisabled||this.$element().css("left",t),this._leftPanelPercentageWidth=this._leftPanelPercentageWidth||this._convertToPercentage(s);const _=this._convertToPercentage(this._containerWidth-this._convertToPixels(this._leftPanelPercentageWidth));e&&this._actions.onApplyPanelSize({leftPanelWidth:n?`${this._leftPanelPercentageWidth}%`:s,rightPanelWidth:n?`${_}%`:d})}_optionChanged(t){switch(t.name){case"initialLeftPanelWidth":this._leftPanelPercentageWidth=this._convertToPercentage(t.value),this._dimensionChanged();break;case"leftElement":this.repaint();break;case"onActiveStateChanged":case"onApplyPanelSize":this._actions[t.name]=this._createActionByOption(t.name);break;default:super._optionChanged(t)}}_convertToPercentage(t){return t/this._$container.get(0).clientWidth*100}_convertToPixels(t){return t/100*this._$container.get(0).clientWidth}}export{T as S};
