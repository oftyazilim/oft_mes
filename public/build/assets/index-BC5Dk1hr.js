import{B as l,cb as b,cc as _,bX as g,ai as v,aU as I,bY as O}from"./main-DVNIbqAE.js";const h=l({transition:{type:null,default:"fade-transition",validator:e=>e!==!0}},"transition"),y=(e,s)=>{let{slots:n}=s;const{transition:t,disabled:r,group:a,...i}=e,{component:c=a?_:g,...u}=b(t)?t:{};let o;return b(t)?o=v(u,JSON.parse(JSON.stringify({disabled:r,group:a})),i):o=v({name:r||!t?"":t},i),I(c,o,n)};function T(e,s){if(!O)return;const n=s.modifiers||{},t=s.value,{handler:r,options:a}=typeof t=="object"?t:{handler:t,options:{}},i=new IntersectionObserver(function(){var m;let c=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],u=arguments.length>1?arguments[1]:void 0;const o=(m=e._observe)==null?void 0:m[s.instance.$.uid];if(!o)return;const f=c.some(d=>d.isIntersecting);r&&(!n.quiet||o.init)&&(!n.once||f||o.init)&&r(f,c,u),f&&n.once?p(e,s):o.init=!0},a);e._observe=Object(e._observe),e._observe[s.instance.$.uid]={init:!1,observer:i},i.observe(e)}function p(e,s){var t;const n=(t=e._observe)==null?void 0:t[s.instance.$.uid];n&&(n.observer.unobserve(e),delete e._observe[s.instance.$.uid])}const S={mounted:T,unmounted:p};export{S as I,y as M,h as m};
